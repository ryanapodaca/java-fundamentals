/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package basiclibrary;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;
import java.util.ArrayList;

class LibraryTest {
    @Test void someLibraryMethodReturnsTrue() {
        Library classUnderTest = new Library();
        assertTrue(classUnderTest.someLibraryMethod(), "someLibraryMethod should return 'true'");
    }

    @Test void rollReturnsArray() {
        Library library = new Library();
        int[] returnedArray;
        returnedArray = library.roll(5);
        assertEquals(new int[5], returnedArray);
    }

    @Test void duplicatesReturnsTrue() {
        Library library = new Library();
        int[] array ={1,2,3,3,4,5};
        assertTrue(library.containsDuplicates(array));
    }

    @Test void aveReturnsFloat() {
        Library library = new Library();
        int[] array= {1,2,3,4,5};
        float returnedFloat = library.averages(array);
        assertEquals(3.0f, returnedFloat);
    }

    @Test void lowestArrayReturned() {
        Library library = new Library();
        int[][] array = {{1,2,3},{2,4,7},{3,6,9}};
        int[] returnedArray = library.lowestArrayAve(array);
        assertEquals(new int[]{1,2,3}, returnedArray);
    }

    @Test void lowestHighestAndNonexistentTemps() {
        Library library = new Library();
        int[][] weeklyMonthTemperatures = {
                {66, 64, 58, 65, 71, 57, 60},
                {57, 65, 65, 70, 72, 65, 51},
                {55, 54, 60, 53, 59, 57, 61},
                {65, 56, 55, 52, 55, 62, 57}
        };
        String output = library.findLoHiAndNotExistingTemp(weeklyMonthTemperatures);
        assertEquals("High: 72\nLow: 51\nNever saw temperature: 63\nNever saw temperature: 67\nNever saw temperature: 68\nNever saw temperature: 69", output);
    }

    @Test void mostVotesReturned() {
        Library library = new Library();
        ArrayList<String> votes = new ArrayList<>();
        votes.add("Bush");
        votes.add("Bush");
        votes.add("Bush");
        votes.add("Shrub");
        votes.add("Hedge");
        votes.add("Shrub");
        votes.add("Bush");
        votes.add("Hedge");
        votes.add("Bush");

        String winner = library.tally(votes);
        assertEquals("Bush", winner);
    }

}
